/**
 * Cotect User Endpoints
 * User endpoints REST API for cotect project.
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CaseContact from './CaseContact';
import CasePlace from './CasePlace';
import CaseSymptom from './CaseSymptom';

/**
* The CaseReport model module.
* @module model/CaseReport
* @version 0.1.0
*/
export default class CaseReport {
    /**
    * Constructs a new <code>CaseReport</code>.
    * @alias module:model/CaseReport
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>CaseReport</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/CaseReport} obj Optional instance to populate.
    * @return {module:model/CaseReport} The populated <code>CaseReport</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CaseReport();
                        
            
            if (data.hasOwnProperty('age')) {
                obj['age'] = ApiClient.convertToType(data['age'], 'Number');
            }
            if (data.hasOwnProperty('gender')) {
                obj['gender'] = ApiClient.convertToType(data['gender'], 'String');
            }
            if (data.hasOwnProperty('residence')) {
                obj['residence'] = CasePlace.constructFromObject(data['residence']);
            }
            if (data.hasOwnProperty('covid_test')) {
                obj['covid_test'] = ApiClient.convertToType(data['covid_test'], 'String');
            }
            if (data.hasOwnProperty('covid_contact')) {
                obj['covid_contact'] = ApiClient.convertToType(data['covid_contact'], 'Boolean');
            }
            if (data.hasOwnProperty('symptoms')) {
                obj['symptoms'] = ApiClient.convertToType(data['symptoms'], [CaseSymptom]);
            }
            if (data.hasOwnProperty('places')) {
                obj['places'] = ApiClient.convertToType(data['places'], [CasePlace]);
            }
            if (data.hasOwnProperty('contacts')) {
                obj['contacts'] = ApiClient.convertToType(data['contacts'], [CaseContact]);
            }
        }
        return obj;
    }

    /**
    * @member {Number} age
    */
    age = undefined;
    /**
    * @member {module:model/CaseReport.GenderEnum} gender
    */
    gender = undefined;
    /**
    * @member {module:model/CasePlace} residence
    */
    residence = undefined;
    /**
    * @member {module:model/CaseReport.CovidTestEnum} covid_test
    */
    covid_test = undefined;
    /**
    * @member {Boolean} covid_contact
    */
    covid_contact = undefined;
    /**
    * @member {Array.<module:model/CaseSymptom>} symptoms
    */
    symptoms = undefined;
    /**
    * @member {Array.<module:model/CasePlace>} places
    */
    places = undefined;
    /**
    * @member {Array.<module:model/CaseContact>} contacts
    */
    contacts = undefined;



    /**
    * Allowed values for the <code>gender</code> property.
    * @enum {String}
    * @readonly
    */
    static GenderEnum = {
        /**
         * value: "male"
         * @const
         */
        "male": "male",
        /**
         * value: "female"
         * @const
         */
        "female": "female",
        /**
         * value: "other"
         * @const
         */
        "other": "other"    };
    /**
    * Allowed values for the <code>covid_test</code> property.
    * @enum {String}
    * @readonly
    */
    static CovidTestEnum = {
        /**
         * value: "not-tested"
         * @const
         */
        "not-tested": "not-tested",
        /**
         * value: "tested-negative"
         * @const
         */
        "tested-negative": "tested-negative",
        /**
         * value: "tested-positive"
         * @const
         */
        "tested-positive": "tested-positive",
        /**
         * value: "tested-pending"
         * @const
         */
        "tested-pending": "tested-pending"    };

}
