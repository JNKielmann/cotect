/**
 * Cotect User Endpoints
 * User endpoints REST API for cotect project.
 *
 * The version of the OpenAPI document: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CasePlace model module.
 * @module model/CasePlace
 * @version 0.1.2
 */
class CasePlace {
    /**
     * Constructs a new <code>CasePlace</code>.
     * @alias module:model/CasePlace
     * @param placeId {String} 
     */
    constructor(placeId) { 
        
        CasePlace.initialize(this, placeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, placeId) { 
        obj['place_id'] = placeId;
    }

    /**
     * Constructs a <code>CasePlace</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CasePlace} obj Optional instance to populate.
     * @return {module:model/CasePlace} The populated <code>CasePlace</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CasePlace();

            if (data.hasOwnProperty('place_id')) {
                obj['place_id'] = ApiClient.convertToType(data['place_id'], 'String');
            }
            if (data.hasOwnProperty('visit_dates')) {
                obj['visit_dates'] = ApiClient.convertToType(data['visit_dates'], ['Date']);
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('place_name')) {
                obj['place_name'] = ApiClient.convertToType(data['place_name'], 'String');
            }
            if (data.hasOwnProperty('place_types')) {
                obj['place_types'] = ApiClient.convertToType(data['place_types'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} place_id
 */
CasePlace.prototype['place_id'] = undefined;

/**
 * @member {Array.<Date>} visit_dates
 */
CasePlace.prototype['visit_dates'] = undefined;

/**
 * @member {Number} latitude
 */
CasePlace.prototype['latitude'] = undefined;

/**
 * @member {Number} longitude
 */
CasePlace.prototype['longitude'] = undefined;

/**
 * @member {String} place_name
 */
CasePlace.prototype['place_name'] = undefined;

/**
 * @member {Array.<String>} place_types
 */
CasePlace.prototype['place_types'] = undefined;






export default CasePlace;

